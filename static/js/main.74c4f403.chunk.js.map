{"version":3,"sources":["components/Formulario.jsx","components/Cita.jsx","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","setCita","error","setError","setMensajeEnviado","handlerState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","console","log","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citas","setCitas","useEffect","localStorage","setItem","JSON","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c4f403.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    //Crear el estado de las citas\r\n    const [cita, setCita] = useState({\r\n        mascota: '',\r\n        propietario:'',\r\n        fecha:'',\r\n        hora:'',\r\n        sintomas:'',\r\n    })\r\n\r\n    //Creando el estado del error\r\n    const [error, setError] = useState(false)\r\n\r\n    //Nuevo Estado para dar msj al usuario de que sus datos se guardaron bien\r\n\r\n    const[mensajeEnviado, setMensajeEnviado] = useState(false)\r\n\r\n    const handlerState = e =>{\r\n        setCita({\r\n            //Nos traemos una copia con los puntos\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //Extraer valores de la citas\r\n    const {mascota, propietario, fecha, hora, sintomas} = cita;\r\n    \r\n    //Cuando el usuario presione agregar cita\r\n    const submitCita = e =>{\r\n        e.preventDefault();\r\n        //Validar\r\n\r\n        if(mascota.trim()==='' || propietario.trim()==='' || fecha.trim()==='' ||hora.trim()==='' ||sintomas.trim()==='' )\r\n        {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        //Agregar id\r\n        cita.id = uuidv4(); \r\n\r\n\r\n        //Crear una cita\r\n        crearCita(cita)\r\n\r\n        //Mostramos msj exito\r\n        setMensajeEnviado(true)\r\n\r\n        //Mostramos msj sin  exito\r\n        setMensajeEnviado(true)\r\n\r\n        //LImpiar Formulario\r\n        setCita({\r\n            mascota:'',\r\n            propietario:'',\r\n            fecha:'',\r\n            hora:'',\r\n            sintomas:''\r\n        })\r\n\r\n\r\n        console.log('enviando formulario')\r\n    }\r\n    \r\n    return(\r\n      <>\r\n        <h2>Crear Cita</h2>  \r\n        {error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p> : null}\r\n        <form\r\n            onSubmit={submitCita}\r\n        >\r\n            <label>\r\n                Nombre de Mascota\r\n            </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"mascota\"\r\n                placeholder=\"Nombre Mascota\"\r\n                className=\"u-full-width\"\r\n                value={mascota}\r\n                onChange={handlerState}\r\n            />\r\n            <label>\r\n                Nombre del Dueño\r\n            </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"propietario\"\r\n                placeholder=\"Nombre del dueño de la mascota\"\r\n                className=\"u-full-width\"\r\n                value={propietario}\r\n                onChange={handlerState}\r\n            />\r\n            <label>\r\n                Fecha\r\n            </label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fecha\"\r\n                className=\"u-full-width\"\r\n                value={fecha}\r\n                onChange={handlerState}\r\n            />\r\n            <label>Hora Ingreso</label>\r\n            <input \r\n                 type=\"time\" \r\n                 name=\"hora\"\r\n                 className=\"u-full-width\"\r\n                 value={hora}\r\n                 onChange={handlerState}\r\n            />\r\n            <label>Síntomas</label>\r\n            <textarea \r\n                name=\"sintomas\"\r\n                className=\"u-full-width\"\r\n                value={sintomas}\r\n                placeholder=\"¿Cuales son los síntomas?\"\r\n                onChange={handlerState}\r\n            ></textarea>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"u-full-width button-primary\"\r\n            >\r\n                Agregar Cita\r\n            </button>\r\n        </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n\r\n  ","const Cita = ({cita: {mascota, propietario, fecha, hora, sintomas, id},eliminarCita}) => {\r\n    return ( \r\n        <div className=\"cita\">\r\n            <p>Mascota: <span>{mascota}</span></p>\r\n            <p>Propietario: <span>{propietario}</span></p>\r\n            <p>Fecha: <span>{fecha}</span></p>\r\n            <p>Hora: <span>{hora}</span></p>\r\n            <p>Síntomas: <span>{sintomas}</span></p>\r\n            <button \r\n            onClick={() => eliminarCita(id)} \r\n            className=\"button eliminar u-full-width\"\r\n            >Eliminar &times;</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Cita;","import {useState, useEffect} from 'react'\nimport Formulario from './components/Formulario'; \nimport Cita from './components/Cita'; \n\nfunction App() {\n  const[citas, setCitas] = useState([])\n  // Citas en el LOcalStorage\n  //EStado de todas las citas\n  \n\n  console.log(citas)\n\n  useEffect(()=>{\n      localStorage.setItem('citas',JSON.stringify(citas))\n    },[citas]);\n\n  //Funcion que tome todas las citas actuales y agregue las nuevas\n\n  const crearCita = cita =>{\n    setCitas([\n      ...citas,\n      cita\n    ])\n  };\n\n  //Funcion encargada de eliminar las citas\n  const eliminarCita = id =>{\n    const nuevasCitas = citas.filter(cita=> cita.id !== id)\n    setCitas(nuevasCitas)\n  }\n\n  const titulo = citas.length === 0 ?'No hay citas': 'Administrar citas'\n  return (\n    <div>\n      <h1>Administrador de pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario \n            crearCita={crearCita}\n            />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita=>(\n              <Cita\n                cita={cita}\n                key={cita.id}\n                eliminarCita ={eliminarCita}\n                >\n              </Cita>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}